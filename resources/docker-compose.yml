services:

  #############
  # RS-SERVER #
  #############

  # From: https://github.com/RS-PYTHON/rs-server/blob/develop/services/adgs/.github/Dockerfile
  rs-server-adgs:
    image: ghcr.io/rs-python/rs-server-adgs:latest
    container_name: rs-server-adgs
    ports:
      - 8001:8000
    depends_on:
      - rspy-pre-actions
    links:
      - postgres
      - minio
      - adgs-station
    # variables are set in the .env file
    environment:
      # postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres_${POSTGRES_DB} # host = the docker container name
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      # s3 bucket
      S3_ACCESSKEY: ${S3_ACCESSKEY}
      S3_SECRETKEY: ${S3_SECRETKEY}
      S3_ENDPOINT: http://minio:9000 # host = the docker container name
      # Config files
      RSPY_STATION_CONFIG: ${RSPY_STATION_CONFIG}
      EODAG_ADGS_CONFIG: ${EODAG_ADGS_CONFIG}
    volumes:
      - rspy_working_dir:${RSPY_WORKING_DIR} # docker named volume
      # to debug your local code:
      - /home/jgaucher/projects/rspy/github/rs-server/services/common/rs_server_common:/usr/local/lib/python3.11/site-packages/rs_server_common
      - /home/jgaucher/projects/rspy/github/rs-server/services/adgs/rs_server_adgs:/usr/local/lib/python3.11/site-packages/rs_server_adgs

  # From: https://github.com/RS-PYTHON/rs-server/blob/develop/services/cadip/.github/Dockerfile
  rs-server-cadip:
    image: ghcr.io/rs-python/rs-server-cadip:latest
    container_name: rs-server-cadip
    ports:
      - 8002:8000
    depends_on:
      - rspy-pre-actions
    links:
      - postgres
      - minio
      - cadip-station
    # variables are set in the .env file
    environment:
      # postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres_${POSTGRES_DB} # host = the docker container name
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      # s3 bucket
      S3_ACCESSKEY: ${S3_ACCESSKEY}
      S3_SECRETKEY: ${S3_SECRETKEY}
      S3_ENDPOINT: http://minio:9000 # host = the docker container name
      # Config files
      RSPY_STATION_CONFIG: ${RSPY_STATION_CONFIG}
      EODAG_CADIP_CONFIG: ${EODAG_CADIP_CONFIG}
    volumes:
      - rspy_working_dir:${RSPY_WORKING_DIR} # docker named volume
      # to debug your local code:
      - /home/jgaucher/projects/rspy/github/rs-server/services/common/rs_server_common:/usr/local/lib/python3.11/site-packages/rs_server_common
      - /home/jgaucher/projects/rspy/github/rs-server/services/cadip/rs_server_cadip:/usr/local/lib/python3.11/site-packages/rs_server_cadip
      - /home/jgaucher/projects/rspy/github/.vscode/launch.json:/usr/local/lib/python3.11/site-packages/.vscode/launch.json
    entrypoint: tail
    command: -F anything

  ############
  # STATIONS #
  ############

  # From: https://github.com/RS-PYTHON/rs-testmeans/blob/develop/src/ADGS/Dockerfile
  adgs-station:
    image: ghcr.io/rs-python/rs-testmeans_adgs-station-mock:latest
    container_name: adgs-station
    ports:
      - 5001:5000

  # From: https://github.com/RS-PYTHON/rs-testmeans/blob/develop/src/CADIP/Dockerfile
  cadip-station:
    image: ghcr.io/rs-python/rs-testmeans_cadip-station-mock:latest
    container_name: cadip-station
    ports:
      - 5002:5000

  ###############
  # PRE-ACTIONS #
  ###############

  # Run a bash container as root to run custom pre-actions
  rspy-pre-actions:
    image: bash:latest
    container_name: rspy-pre-actions
    privileged: true
    volumes:
      - .:/docker/compose/dir
      - rspy_working_dir:${RSPY_WORKING_DIR} # docker named volume
    entrypoint: /docker/compose/dir/scripts/rspy-pre-actions.sh

  ##########
  # OTHERS #
  ##########

  postgres:
    image: postgres:15-alpine
    container_name: postgres_${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    # variables are set in the .env file
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}

  # Use minio for temp s3 storage
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data # docker named volume
    # variables are set in the .env file
    environment:
      MINIO_ROOT_USER: ${S3_ACCESSKEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRETKEY}
    command: server --console-address ":9001" /data

  # Local Jupyter server.
  # The logs will show shomething like: http://127.0.0.1:8888/lab?token=<token-value> in your terminal.
  # Open (ctrl-click) this link to open the Jupyter web client (=Jupyter Notebook) in your browser.
  jupyter:
    image: jupyter/minimal-notebook:latest
    container_name: jupyter
    ports:
      - 8888:8888
    links:
      - rs-server-adgs
      - rs-server-cadip
      - minio # used to check manually the s3 bucket contents
    # variables are set in the .env file
    environment:
      RSPY_WORKING_DIR: ${RSPY_WORKING_DIR}
      # s3 bucket
      S3_ACCESSKEY: ${S3_ACCESSKEY}
      S3_SECRETKEY: ${S3_SECRETKEY}
      S3_ENDPOINT: http://minio:9000 # host = the docker container name
    volumes: 
      - ../sprints:/home/jovyan/rspy-demos
      - rspy_working_dir:${RSPY_WORKING_DIR} # docker named volume

# Docker named volumes
volumes:
  # Used by the minio container
  minio_storage: {}

  # Used to:
  #   - store the config files (stations url and port ...)
  #   - for the demo, download files locally in laptop mode (downloaded by rs-server, read by jupyter)
  rspy_working_dir: {}