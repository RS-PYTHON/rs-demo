# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: prefect_deployment
prefect-version: 3.1.4

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: prefect-image
    tag: 0.0.1
    dockerfile: auto

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.git_clone:
    repository: https://github.com/RS-PYTHON/rs-demo.git
    branch: develop
    credentials: 
    #access_token: null
# - prefect.deployments.steps.git_clone:
#     repository: https://github.com/RS-PYTHON/rs-client-libraries.git #https://github.com/RS-PYTHON/rs-demo.git
#     branch: fix/rspy530-implement-staging-rs-client
#     access_token: null

# - prefect.deployments.steps.pip_install_requirements:
#     directory: "{{ clone-step.directory }}" # `clone-step` is a user-provided `id` field
#     requirements_file: requirements.txt

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: staging_deployment
  entrypoint: flows/staging.py:staging
  schedule: {}
  flow_name: null
  parameters: {}
  #work_pool: # select work pool from prefect server ui -> work pool
  #  name: default #staging-pool ###
  #  work_queue_name: null
    #job_variables:
      #image: '{{ build_image.image }}'